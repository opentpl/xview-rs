import xview from 'xview-react'

const render = context => {
    return context.root((function* () {
        if (context.get('i') == 1) {
            yield context.createElement('div', {}, (function* () {
                yield `if`
            })())
        } else if (context.get('i') == 1) {
            yield context.createElement('div', {}, (function* () {
                yield `else if`
            })())
        } else {
            yield context.createElement('div', {}, (function* () {
                yield `else`
                if (context.get('i') == 0) {
                    yield context.createElement('div', {}, (function* () {
                        yield `nesting if`
                    })())
                } else if (context.get('i') == 1) {
                    yield context.createElement('div', {}, (function* () {
                        yield `nesting else if`
                    })())
                } else {
                    yield context.createElement('div', {}, (function* () {
                        yield `nesting else`
                    })())
                }
            })())
        }
    })()
    )
}

export const { Component } = xview
Component.prototype.render = function () {
    return render(xview.createContext(this))
}

export const create = members => {
    members = members || {}
    members.render = Component.prototype.render
    return xview.React.createClass(members)
}

export default (props, context) => {
    context = context || xview.createContext({ props })
    return render(context)
}